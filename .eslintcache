[{"C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\index.js":"1","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\reportWebVitals.js":"2","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\App.js":"3","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\main\\main.js":"4","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\header\\header.js":"5","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\drawer\\drawer.js":"6","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\crawler\\crawler.js":"7","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\home\\home.js":"8","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\components\\charts\\lineChart.js":"9","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\components\\charts\\barChart.js":"10","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\components\\charts\\doughnutChart.js":"11","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\components\\charts\\twoLineChart.js":"12","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\components\\charts\\pieChart.js":"13","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\components\\table.js":"14","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\api\\crawler.js":"15","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\api\\BaseApi.js":"16","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\recommender\\recommender.js":"17"},{"size":500,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":748,"mtime":1613102292183,"results":"21","hashOfConfig":"19"},{"size":227,"mtime":1611142041001,"results":"22","hashOfConfig":"19"},{"size":744,"mtime":1610880607284,"results":"23","hashOfConfig":"19"},{"size":5667,"mtime":1613131854092,"results":"24","hashOfConfig":"19"},{"size":7001,"mtime":1613345448733,"results":"25","hashOfConfig":"19"},{"size":1580,"mtime":1613133629478,"results":"26","hashOfConfig":"19"},{"size":848,"mtime":1611147101144,"results":"27","hashOfConfig":"19"},{"size":994,"mtime":1613307963332,"results":"28","hashOfConfig":"19"},{"size":1153,"mtime":1613096747416,"results":"29","hashOfConfig":"19"},{"size":757,"mtime":1610883367475,"results":"30","hashOfConfig":"19"},{"size":1080,"mtime":1610883367468,"results":"31","hashOfConfig":"19"},{"size":7677,"mtime":1613345675179,"results":"32","hashOfConfig":"19"},{"size":680,"mtime":1613128416149,"results":"33","hashOfConfig":"19"},{"size":578,"mtime":1612470600039,"results":"34","hashOfConfig":"19"},{"size":6715,"mtime":1613430273317,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"7f62ge",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"38"},"C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\index.js",[],["80","81"],"C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\reportWebVitals.js",[],"C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\App.js",["82"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Main from \"./main/main\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport Recommender from \"./recommender/recommender\";\nimport Crawler from \"./crawler/crawler\";\nimport Home from \"./home/home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Main>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/crawler\">\n              <Crawler />\n            </Route>\n            <Route exact path=\"/Recommender\">\n              <Recommender />\n            </Route>\n          </Switch>\n        </Main>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\main\\main.js",[],"C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\header\\header.js",[],"C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\drawer\\drawer.js",["83","84"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { AccountCircle } from \"@material-ui/icons\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    maxWidth: \"calc(100% - 73px)\",\r\n  },\r\n}));\r\n\r\nconst MiniDrawer = (props) => {\r\n  const { history, children } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" style={{ flexGrow: 1 }}>\r\n            Admin Dashboard\r\n          </Typography>\r\n\r\n          <IconButton color=\"inherit\" aria-label=\"account\">\r\n            <AccountCircle />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {[\r\n            {\r\n              text: \"Home\",\r\n              icon: <HomeIcon />,\r\n              onClick: () => history.push(\"/\"),\r\n            },\r\n            {\r\n              text: \"Crawler\",\r\n              icon: <DashboardIcon />,\r\n              onClick: () => history.push(\"/crawler\"),\r\n            },\r\n            {\r\n              text: \"Recomender\",\r\n              icon: <HelpIcon />,\r\n              onClick: () => history.push(\"/Recommender\"),\r\n            },\r\n          ].map(({ text, icon, onClick }, index) => (\r\n            <ListItem button key={text} onClick={onClick}>\r\n              <ListItemIcon>{icon}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n\r\n        <div>{children}</div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(MiniDrawer);\r\n","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\crawler\\crawler.js",["85","86","87"],"import React, { useState, useEffect } from \"react\";\r\nimport CrawlerService from \"../api/crawler\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PaginationTableComponent from \"../components/table\";\r\nimport BarChart from \"../components/charts/barChart.js\";\r\nimport DoughnutChart from \"../components/charts/doughnutChart.js\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport \"./crawler.css\";\r\nimport { AiOutlineBarChart } from \"react-icons/ai\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(1),\r\n    boxSizing: \"border-box\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction Crawler() {\r\n  const [response, setResponse] = useState();\r\n  const [selectedCol, setSelectedCol] = useState();\r\n  const [doughnutChartData, setDoughnutChartData] = useState({\r\n    labels: [],\r\n    data: [],\r\n  });\r\n  const [barChartData, setBarChartData] = useState({ labels: [], data: [] });\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (response && !selectedCol) {\r\n      setChartData(\"chipset\");\r\n    } else if (!response) {\r\n      setSelectedCol(\"\");\r\n      setDoughnutChartData({ labels: [], data: [] });\r\n      setBarChartData({ labels: [], data: [] });\r\n    }\r\n  }, [response]);\r\n\r\n  useEffect(() => {\r\n    startCrawler();\r\n  }, []);\r\n\r\n  const setChartData = (name) => {\r\n    const doughnutDataData = response.reduce(\r\n      (prev, cur) => ({\r\n        ...prev,\r\n        [cur[name]]: prev[cur[name]] ? prev[cur[name]] + 1 : 1,\r\n      }),\r\n      {}\r\n    );\r\n    // const sortedDoughnutDataKey = Object.entries(doughnutDataData).sort(\r\n    //   (a, b) => b[1] - a[1] // index 1 of entry of objects will show the value of an item in the object\r\n    // ).map(item => item[0]);\r\n    const sortedDoughnutDataKey = Object.keys(doughnutDataData).sort(\r\n      (a, b) => doughnutDataData[b] - doughnutDataData[a]\r\n    );\r\n    const otherData = sortedDoughnutDataKey\r\n      .splice(8)\r\n      .reduce((prev, key) => prev + doughnutDataData[key], 0);\r\n    const doughnutData = sortedDoughnutDataKey.reduce(\r\n      (prev, key) => {\r\n        prev.labels.push(key.length > 32 ? key.substr(0, 30) + \"...\" : key);\r\n        prev.data.push(doughnutDataData[key]);\r\n        return prev;\r\n      },\r\n      { labels: [], data: [] }\r\n    );\r\n    if (otherData) {\r\n      doughnutData.labels.push(\"Others...\");\r\n      doughnutData.data.push(otherData);\r\n    }\r\n    const barDataData = [0, 0]; // [selected column count, other column count]\r\n    response.forEach((row) =>\r\n      Object.keys(row).forEach((cell) => {\r\n        if (!row[cell]) {\r\n          //if value is null\r\n          barDataData[cell === name ? 0 : 1]++;\r\n        }\r\n      })\r\n    );\r\n    const barData = {\r\n      labels: [`${name} (${barDataData[0]})`, `Others (${barDataData[1]})`],\r\n      data: barDataData,\r\n    };\r\n    setDoughnutChartData(doughnutData);\r\n    setBarChartData(barData);\r\n    setSelectedCol(name);\r\n  };\r\n\r\n  const uploadFile = async (e) => {\r\n    const inputElement = e.currentTarget;\r\n    const file = inputElement.files[0];\r\n    if (file) {\r\n      try {\r\n        const res = await CrawlerService.uploadFile(file);\r\n        console.log(res);\r\n        await startCrawler();\r\n        inputElement.value = \"\";\r\n      } catch (error) {\r\n        console.log(\"Network Error\", error, error.toJson?.(), error.response);\r\n      }\r\n    }\r\n  };\r\n\r\n  const startCrawler = async () => {\r\n    try {\r\n      const res = await CrawlerService.startCrawler();\r\n\r\n      setResponse(res.data);\r\n    } catch (error) {\r\n      console.log(\"Network Error\", error, error.toJson?.(), error.response);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {!response && (\r\n          <LinearProgress color=\"secondary\" style={{ margin: \"10px\" }} />\r\n        )}\r\n        {response && (\r\n          <div className={classes.root}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={12} lg={5} xl={5}>\r\n                <Paper className={classes.paper} className=\"chart1\">\r\n                  <DoughnutChart\r\n                    dataCharts={doughnutChartData}\r\n                    label={selectedCol}\r\n                  />\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} lg={5} xl={5}>\r\n                <Paper className={classes.paper} className=\"chart1\">\r\n                  <BarChart dataCharts={barChartData} label={selectedCol} />\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} lg={2} xl={2}>\r\n                <Paper className={classes.paper} style={{ height: \"100%\" }}>\r\n                  <div className=\"stati bg-sun_flower left\">\r\n                    <i className=\"icon-mustache icons\">\r\n                      <AiOutlineBarChart />\r\n                    </i>\r\n                    <div>\r\n                      <b>3105</b>\r\n                      <span>Total null values</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div style={{ marginTop: \"70px\" }}>\r\n                    <input\r\n                      accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n                      className={classes.input}\r\n                      id=\"contained-button-file\"\r\n                      type=\"file\"\r\n                      onChange={uploadFile}\r\n                    />\r\n                    <label htmlFor=\"contained-button-file\">\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        component=\"span\"\r\n                      >\r\n                        Upload\r\n                        <PublishIcon />\r\n                      </Button>\r\n                    </label>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      href={CrawlerService.downloadSpecification}\r\n                    >\r\n                      Download <GetAppIcon />\r\n                    </Button>\r\n                  </div>\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              sm={12}\r\n              lg={12}\r\n              xl={12}\r\n              style={{ display: \"block\", width: \"100%\", overflow: \"auto\" }}\r\n            >\r\n              <PaginationTableComponent\r\n                data={response || {}}\r\n                onColumnClick={setChartData}\r\n              />\r\n            </Grid>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Crawler;\r\n","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\home\\home.js",["88"],"import React from \"react\";\r\nimport { Container, Paper } from \"@material-ui/core\";\r\nimport \"./home.css\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <Container>\r\n      <div className=\"home\">\r\n        <div className=\"bkground\">\r\n          <div className=\"entry-content\">\r\n            <h1> Data Admin Dashboard </h1>\r\n            <p>\r\n              This dashboard is developed by <b>DiGiCor Data Science Group</b>{\" \"}\r\n              to Analyse the data and provide the insight to the managers. This\r\n              Group used <em>Flask, React Hooks, JavaScript and Material Ui</em>{\" \"}\r\n              to create and develope this dashboard.\r\n            </p>\r\n            <p>\r\n              A key role of the management accountant is to support effective\r\n              decision making by presenting relevant, timely and accurate\r\n              information in a manner that enables informed dialogue and\r\n              decision making.\r\n            </p>\r\n            <p>\r\n              The role of visualisation in this process is to present the\r\n              relevant data in such a way that the message is quickly absorbed\r\n              and understood by the reader so that action can be taken quickly,\r\n              and time is spent on decision making rather than understanding\r\n              performance.\r\n            </p>\r\n          </div>\r\n          <div className=\"date\">\r\n            <em> Decembre 2020 - March 2021 </em>\r\n          </div>\r\n          <div className=\"location\">Melbourne, Australia</div>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\components\\charts\\lineChart.js",[],["89","90"],"C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\components\\charts\\barChart.js",[],"C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\components\\charts\\doughnutChart.js",[],"C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\components\\charts\\twoLineChart.js",[],["91","92"],"C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\components\\charts\\pieChart.js",[],"C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\components\\table.js",["93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108"],"import React, { Component } from \"react\";\r\nimport ReactTable from \"react-table\";\r\n\r\nimport {\r\n  useTable,\r\n  usePagination,\r\n  useFilters,\r\n  useGlobalFilter,\r\n  useAsyncDebounce,\r\n  useSortBy,\r\n} from \"react-table\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n// Define a default UI for filtering\r\nfunction GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n}) {\r\n  const count = preGlobalFilteredRows.length;\r\n  const [value, setValue] = React.useState(globalFilter);\r\n  const onChange = useAsyncDebounce((value) => {\r\n    setGlobalFilter(value || undefined);\r\n  }, 200);\r\n\r\n  return (\r\n    <span>\r\n      Search:{\" \"}\r\n      <input\r\n        className=\"form-control\"\r\n        value={value || \"\"}\r\n        onChange={(e) => {\r\n          setValue(e.target.value);\r\n          onChange(e.target.value);\r\n        }}\r\n        placeholder={`${count} records...`}\r\n      />\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length;\r\n\r\n  return (\r\n    <input\r\n      className=\"form-control\"\r\n      value={filterValue || \"\"}\r\n      onChange={(e) => {\r\n        setFilter(e.target.value || undefined);\r\n      }}\r\n      placeholder={`Search ${count} records...`}\r\n    />\r\n  );\r\n}\r\n\r\nfunction Table({ columns, data, onColumnClick }) {\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  );\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    page,\r\n    state,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n\r\n    state: { pageIndex, pageSize },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 2, pageSize: 5 },\r\n      defaultColumn,\r\n    },\r\n    useFilters,\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  const handleColumnClick = (e) => {\r\n    if (typeof onColumnClick === \"function\") {\r\n      const value = e.target.getAttribute(\"data_id\");\r\n      onColumnClick(value);\r\n    }\r\n  };\r\n\r\n  const handleNonColumnClick = (e) => {\r\n    e.stopImmediatePropagation?.();\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    return;\r\n  };\r\n  console.log(headerGroups);\r\n  const headerGroup = headerGroups[1];\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <div>\r\n      {/* <GlobalFilter\r\n                preGlobalFilteredRows={preGlobalFilteredRows}\r\n                globalFilter={state.globalFilter}\r\n                setGlobalFilter={setGlobalFilter}\r\n            /> */}\r\n      <table className=\"table\" {...getTableProps()}>\r\n        <thead>\r\n          {headerGroup && (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => {\r\n                const { onClick, otherProps } = column.getHeaderProps(\r\n                  column.getSortByToggleProps()\r\n                );\r\n                const handleClick = (e) => {\r\n                  handleColumnClick(e);\r\n                  onClick(e);\r\n                };\r\n                return (\r\n                  <th\r\n                    data_id={column.render(\"Header\")}\r\n                    {...column.getHeaderProps()}\r\n                    {...otherProps}\r\n                    onClick={handleClick}\r\n                  >\r\n                    {column.render(\"Header\")}\r\n                    {/* Render the columns filter UI */}\r\n                    <div onClick={handleNonColumnClick}>\r\n                      {column.canFilter ? column.render(\"Filter\") : null}\r\n                    </div>\r\n                    {/* Add a sort direction indicator */}\r\n                    <span onClick={handleNonColumnClick}>\r\n                      {column.isSorted ? (column.isSortedDesc ? \" \" : \" \") : \"\"}\r\n                    </span>\r\n                  </th>\r\n                );\r\n              })}\r\n            </tr>\r\n          )}\r\n        </thead>\r\n\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td\r\n                      style={{ whiteSpace: \"nowrap\" }}\r\n                      {...cell.getCellProps()}\r\n                    >\r\n                      {cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      {/* \r\n        Pagination can be built however you'd like. \r\n        This is just a very basic UI implementation:\r\n      */}\r\n\r\n      <nav aria-label=\"Page navigation example\">\r\n        <ul className=\"pagination justify-content-center\">\r\n          <li\r\n            className=\"page-item\"\r\n            onClick={() => gotoPage(0)}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            <a className=\"page-link\">First</a>\r\n          </li>\r\n          <li\r\n            className=\"page-item\"\r\n            onClick={() => previousPage()}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            <a className=\"page-link\">{\"<\"}</a>\r\n          </li>\r\n          <li\r\n            className=\"page-item\"\r\n            onClick={() => nextPage()}\r\n            disabled={!canNextPage}\r\n          >\r\n            <a className=\"page-link\">{\">\"}</a>\r\n          </li>\r\n          <li\r\n            className=\"page-item\"\r\n            onClick={() => gotoPage(pageCount - 1)}\r\n            disabled={!canNextPage}\r\n          >\r\n            <a className=\"page-link\">Last</a>\r\n          </li>\r\n          <li>\r\n            <a className=\"page-link\">\r\n              Page{\" \"}\r\n              <strong>\r\n                {pageIndex + 1} of {pageOptions.length}\r\n              </strong>{\" \"}\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a className=\"page-link\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"number\"\r\n                defaultValue={pageIndex + 1}\r\n                onChange={(e) => {\r\n                  const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n                  gotoPage(page);\r\n                }}\r\n                style={{ width: \"100px\", height: \"20px\" }}\r\n              />\r\n            </a>\r\n          </li>{\" \"}\r\n          <select\r\n            className=\"form-control\"\r\n            value={pageSize}\r\n            onChange={(e) => {\r\n              setPageSize(Number(e.target.value));\r\n            }}\r\n            style={{ top: \"0px\", width: \"120px\", height: \"38px\" }}\r\n          >\r\n            {[5, 10, 20, 30, 40, 50].map((pageSize) => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PaginationTableComponent(props) {\r\n  const columns = React.useMemo(() => []);\r\n\r\n  const sample = props.data;\r\n  const headerdata = [];\r\n\r\n  Object.keys(sample[0])\r\n    .slice(0, 74)\r\n    .map((val, k) => {\r\n      headerdata.push({\r\n        Header: \"a\",\r\n        columns: [\r\n          {\r\n            Header: val,\r\n            accessor: val,\r\n          },\r\n        ],\r\n      });\r\n    });\r\n\r\n  return (\r\n    <Table\r\n      columns={headerdata}\r\n      data={sample}\r\n      onColumnClick={props.onColumnClick}\r\n    />\r\n  );\r\n}\r\n\r\nexport default PaginationTableComponent;\r\n","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\api\\crawler.js",[],"C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\api\\BaseApi.js",[],["109","110"],"C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\recommender\\recommender.js",["111","112","113","114","115"],"import { React, useState } from \"react\";\nimport \"./recommender.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Paper, Container, Button, Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport axios from \"axios\";\nimport { AiFillSetting, AiFillStar } from \"react-icons/ai\";\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nfunction Recommender() {\n  const classes = useStyles();\n\n  // React hooks\n  const [input, setInput] = useState(\"\");\n  const [bomsid, setBomsid] = useState(\"\");\n  const [apiResponse, setApiResonse] = useState(\"\");\n  const [data, setdata] = useState(\"\");\n  const [popularData, setPopular] = useState(\"\");\n\n  // API Function\n  function handleSubmit(e) {\n    e.preventDefault();\n    setBomsid(input);\n    let host = process.env.REACT_APP_LOCAL_URL_RECOMMENDER;\n    console.log(\"host\");\n    console.log(host);\n    let API_ROUTE_TEST = \"/api/recomender/name/\";\n    let API_ROUTE_PROD = \"/api/recomender/boms/\";\n    let API_URL = \"/api/recomender/name/\";\n\n    // if (process.env.NODE_ENV === \"development\") {\n    //   host = process.env.REACT_APP_TEST_URL;\n    //   API_URL = API_ROUTE_TEST;\n    // } else if (process.env.NODE_ENV === \"production\") {\n    //   host = process.env.REACT_APP_PROD_URL;\n    //   API_URL = API_ROUTE_PROD;\n    // } else {\n    //   host = process.env.REACT_APP_LOCAL_URL;\n    //   let API_URL = \"/api/recomender/boms/\";\n    // }\n\n    console.log(host);\n\n    const API_ROUTE = `${host}${API_URL}${input}`;\n    console.log(API_ROUTE);\n    axios\n      .post(\n        API_ROUTE,\n        { bom_id: input },\n        {\n          cache: \"no-cache\",\n        }\n      )\n      .then((res) => {\n        const json = res.data;\n        // setApiResonse(json);\n        const api_result = Object.keys(json).map((key) => [key, json[key]]);\n        const data_array = api_result[0][1];\n        const data = data_array[0];\n        setdata(data);\n      });\n  }\n\n  function handlePopularsubmit(e) {\n    e.preventDefault();\n    let host = process.env.REACT_APP_LOCAL_URL_RECOMMENDER;\n    let API_ROUTE_TEST = \"/api/recomender/simillar\";\n\n    // if (process.env.NODE_ENV === \"development\") {\n    //   host = process.env.REACT_APP_TEST_URL;\n    // } else if (process.env.NODE_ENV === \"production\") {\n    //   host = process.env.REACT_APP_PROD_URL;\n    // } else {\n    //   host = process.env.REACT_APP_LOCAL_URL;\n    // }\n\n    const API_ROUTE = `${host}${API_ROUTE_TEST}`;\n    console.log(API_ROUTE);\n\n    axios.get(API_ROUTE).then((res) => {\n      const json = res.data;\n      // setApiResonse(json);\n      const api_result = Object.keys(json).map((key) => [key, json[key]]);\n      const data_array = api_result[0][1];\n      const data = data_array[0];\n      setPopular(data);\n    });\n  }\n\n  // API response reformating\n  const boms = Object.keys(data).map(function (d) {\n    return [d, data[d]];\n  });\n\n  const boms_simillar = Object.keys(popularData).map(function (d) {\n    return [d, popularData[d]];\n  });\n\n  return (\n    <div className=\"recommender\">\n      <Container>\n        <Paper>\n          <Box\n            display=\"flex\"\n            justifyContent=\"center\"\n            p={1}\n            bgcolor=\"background.paper\"\n          >\n            <Box>\n              <InputLabel htmlFor=\"input-with-icon-adornment\">\n                Enter Product Name:\n              </InputLabel>\n              <Input\n                id=\"input-with-icon-adornment\"\n                startAdornment={\n                  <InputAdornment position=\"start\">\n                    <PlayArrowIcon />\n                  </InputAdornment>\n                }\n                onChange={(e) => setInput(e.target.value)}\n              />\n            </Box>\n            <Box p={1} ml={2}>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                onClick={handleSubmit}\n              >\n                Recommend Me !\n              </Button>\n            </Box>\n            <Box p={1} ml={2}>\n              <Button\n                type=\"submit\"\n                onClick={handlePopularsubmit}\n                variant=\"outlined\"\n                color=\"secondary\"\n                className={classes.button}\n              >\n                popular products\n              </Button>\n            </Box>\n          </Box>\n          <Box style={{ whiteSpace: \"wrap\" }}>\n            {data && (\n              <div className=\"recommender\">\n                <h5 style={{ display: \"flex\", justifyContent: \"start\" }}>\n                  Simillar Products\n                </h5>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-around\",\n                    whiteSpace: \"pre\",\n                  }}\n                >\n                  {boms.map((bom) => (\n                    <div style={{ maxWidth: \"260px\", minWidth: \"260px\" }}>\n                      <div className=\"stati bg-belize_hole left\">\n                        <i className=\"icon-mustache icons\">\n                          <AiFillSetting />\n                        </i>\n                        <div>\n                          <b>{bom[0]}</b>\n                          <span>{bom[1]}</span>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {popularData && (\n              <div>\n                <h5>Popular Products</h5>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    whiteSpace: \"normal\",\n                  }}\n                >\n                  {boms_simillar.map((bom) => (\n                    <div style={{ maxWidth: \"200px\" }}>\n                      <div className=\"stati bg-peter_river left\">\n                        <i className=\"icon-mustache icons\">\n                          <AiFillStar />\n                        </i>\n                        <div>\n                          <b>{bom[0]}</b>\n                          <span>{bom[1]}</span>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </Box>\n        </Paper>\n      </Container>\n    </div>\n  );\n}\n\nexport default Recommender;\n",{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":1,"column":8,"nodeType":"122","messageId":"123","endLine":1,"endColumn":12},{"ruleId":"120","severity":1,"message":"124","line":19,"column":10,"nodeType":"122","messageId":"123","endLine":19,"endColumn":16},{"ruleId":"120","severity":1,"message":"125","line":24,"column":10,"nodeType":"122","messageId":"123","endLine":24,"endColumn":23},{"ruleId":"126","severity":1,"message":"127","line":50,"column":6,"nodeType":"128","endLine":50,"endColumn":16,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":138,"column":50,"nodeType":"132","endLine":138,"endColumn":68},{"ruleId":"130","severity":1,"message":"131","line":146,"column":50,"nodeType":"132","endLine":146,"endColumn":68},{"ruleId":"120","severity":1,"message":"133","line":2,"column":21,"nodeType":"122","messageId":"123","endLine":2,"endColumn":26},{"ruleId":"116","replacedBy":"134"},{"ruleId":"118","replacedBy":"135"},{"ruleId":"116","replacedBy":"136"},{"ruleId":"118","replacedBy":"137"},{"ruleId":"120","severity":1,"message":"138","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":26},{"ruleId":"120","severity":1,"message":"139","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":18},{"ruleId":"120","severity":1,"message":"140","line":14,"column":10,"nodeType":"122","messageId":"123","endLine":14,"endColumn":22},{"ruleId":"120","severity":1,"message":"141","line":71,"column":5,"nodeType":"122","messageId":"123","endLine":71,"endColumn":9},{"ruleId":"120","severity":1,"message":"142","line":74,"column":5,"nodeType":"122","messageId":"123","endLine":74,"endColumn":10},{"ruleId":"120","severity":1,"message":"143","line":83,"column":5,"nodeType":"122","messageId":"123","endLine":83,"endColumn":26},{"ruleId":"120","severity":1,"message":"144","line":84,"column":5,"nodeType":"122","messageId":"123","endLine":84,"endColumn":20},{"ruleId":"145","severity":1,"message":"146","line":191,"column":13,"nodeType":"147","endLine":191,"endColumn":38},{"ruleId":"145","severity":1,"message":"146","line":198,"column":13,"nodeType":"147","endLine":198,"endColumn":38},{"ruleId":"145","severity":1,"message":"146","line":205,"column":13,"nodeType":"147","endLine":205,"endColumn":38},{"ruleId":"145","severity":1,"message":"146","line":212,"column":13,"nodeType":"147","endLine":212,"endColumn":38},{"ruleId":"145","severity":1,"message":"146","line":215,"column":13,"nodeType":"147","endLine":215,"endColumn":38},{"ruleId":"145","severity":1,"message":"146","line":223,"column":13,"nodeType":"147","endLine":223,"endColumn":38},{"ruleId":"120","severity":1,"message":"148","line":257,"column":9,"nodeType":"122","messageId":"123","endLine":257,"endColumn":16},{"ruleId":"126","severity":1,"message":"149","line":257,"column":19,"nodeType":"150","endLine":257,"endColumn":32},{"ruleId":"151","severity":1,"message":"152","line":264,"column":19,"nodeType":"153","messageId":"154","endLine":264,"endColumn":21},{"ruleId":"116","replacedBy":"155"},{"ruleId":"118","replacedBy":"156"},{"ruleId":"120","severity":1,"message":"157","line":27,"column":10,"nodeType":"122","messageId":"123","endLine":27,"endColumn":16},{"ruleId":"120","severity":1,"message":"158","line":28,"column":10,"nodeType":"122","messageId":"123","endLine":28,"endColumn":21},{"ruleId":"120","severity":1,"message":"159","line":28,"column":23,"nodeType":"122","messageId":"123","endLine":28,"endColumn":36},{"ruleId":"120","severity":1,"message":"160","line":39,"column":9,"nodeType":"122","messageId":"123","endLine":39,"endColumn":23},{"ruleId":"120","severity":1,"message":"161","line":40,"column":9,"nodeType":"122","messageId":"123","endLine":40,"endColumn":23},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'BrowserRouter' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'selectedCol' and 'setChartData'. Either include them or remove the dependency array.","ArrayExpression",["164"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Paper' is defined but never used.",["162"],["163"],["162"],["163"],"'Component' is defined but never used.","'ReactTable' is defined but never used.","'GlobalFilter' is defined but never used.","'rows' is assigned a value but never used.","'state' is assigned a value but never used.","'preGlobalFilteredRows' is assigned a value but never used.","'setGlobalFilter' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'columns' is assigned a value but never used.","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["162"],["163"],"'bomsid' is assigned a value but never used.","'apiResponse' is assigned a value but never used.","'setApiResonse' is assigned a value but never used.","'API_ROUTE_TEST' is assigned a value but never used.","'API_ROUTE_PROD' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},"Update the dependencies array to be: [response, selectedCol, setChartData]",{"range":"167","text":"168"},[1639,1649],"[response, selectedCol, setChartData]"]