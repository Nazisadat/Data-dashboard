[{"C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\index.js":"1","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\reportWebVitals.js":"2","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\App.js":"3","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\main\\main.js":"4","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\header\\header.js":"5","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\drawer\\drawer.js":"6","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\crawler\\crawler.js":"7","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\home\\home.js":"8","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\components\\charts\\lineChart.js":"9","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\components\\charts\\barChart.js":"10","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\components\\charts\\doughnutChart.js":"11","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\components\\charts\\twoLineChart.js":"12","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\components\\charts\\pieChart.js":"13","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\components\\table.js":"14","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\api\\crawler.js":"15","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\api\\BaseApi.js":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":598,"mtime":1611306169508,"results":"20","hashOfConfig":"18"},{"size":227,"mtime":1611142041001,"results":"21","hashOfConfig":"18"},{"size":744,"mtime":1610880607284,"results":"22","hashOfConfig":"18"},{"size":6143,"mtime":1612127654577,"results":"23","hashOfConfig":"18"},{"size":7326,"mtime":1612734993136,"results":"24","hashOfConfig":"18"},{"size":137,"mtime":1610878781902,"results":"25","hashOfConfig":"18"},{"size":848,"mtime":1611147101144,"results":"26","hashOfConfig":"18"},{"size":884,"mtime":1612128564806,"results":"27","hashOfConfig":"18"},{"size":1154,"mtime":1612131953326,"results":"28","hashOfConfig":"18"},{"size":757,"mtime":1610883367475,"results":"29","hashOfConfig":"18"},{"size":1080,"mtime":1610883367468,"results":"30","hashOfConfig":"18"},{"size":7568,"mtime":1611308921260,"results":"31","hashOfConfig":"18"},{"size":443,"mtime":1611296548641,"results":"32","hashOfConfig":"18"},{"size":578,"mtime":1612470600039,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"7f62ge",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\index.js",[],["71","72"],"C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\reportWebVitals.js",[],"C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\App.js",["73"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Main from \"./main/main\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport Crawler from \"./crawler/crawler\";\nimport Home from \"./home/home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Main>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/crawler\">\n              <Crawler />\n            </Route>\n          </Switch>\n        </Main>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\main\\main.js",[],"C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\header\\header.js",[],"C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\drawer\\drawer.js",["74","75"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { AccountCircle } from \"@material-ui/icons\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    maxWidth: \"calc(100% - 73px)\",\r\n  },\r\n}));\r\n\r\nconst MiniDrawer = (props) => {\r\n  const { history, children } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" style={{ flexGrow: 1 }}>\r\n            Admin Dashboard\r\n          </Typography>\r\n          <Button color=\"inherit\"> Login</Button>\r\n\r\n          <IconButton color=\"inherit\" aria-label=\"account\">\r\n            <AccountCircle />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {[\r\n            {\r\n              text: \"Home\",\r\n              icon: <HomeIcon />,\r\n              onClick: () => history.push(\"/\"),\r\n            },\r\n            {\r\n              text: \"Crawler\",\r\n              icon: <DashboardIcon />,\r\n              onClick: () => history.push(\"/crawler\"),\r\n            },\r\n            {\r\n              text: \"Recommender\",\r\n              icon: <HelpIcon />,\r\n              onClick: () => history.push(\"/\"),\r\n            },\r\n          ].map(({ text, icon, onClick }, index) => (\r\n            <ListItem button key={text} onClick={onClick}>\r\n              <ListItemIcon>{icon}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        {/* <Divider />\r\n        <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List> */}\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {/* content */}\r\n\r\n        <div>{children}</div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(MiniDrawer);\r\n","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\crawler\\crawler.js",["76","77"],"C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\home\\home.js",[],"C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\components\\charts\\lineChart.js",[],"C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\components\\charts\\barChart.js",[],"C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\components\\charts\\doughnutChart.js",[],"C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\components\\charts\\twoLineChart.js",[],["78","79"],"C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\components\\charts\\pieChart.js",[],"C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\components\\table.js",["80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95"],"// src/components/pagination.table.js\r\nimport React, { Component } from \"react\";\r\nimport ReactTable from \"react-table\";\r\n// import \"react-table/react-table.css\";\r\n\r\nimport {\r\n  useTable,\r\n  usePagination,\r\n  useFilters,\r\n  useGlobalFilter,\r\n  useAsyncDebounce,\r\n  useSortBy,\r\n} from \"react-table\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n// Define a default UI for filtering\r\nfunction GlobalFilter({\r\n  preGlobalFilteredRows,\r\n  globalFilter,\r\n  setGlobalFilter,\r\n}) {\r\n  const count = preGlobalFilteredRows.length;\r\n  const [value, setValue] = React.useState(globalFilter);\r\n  const onChange = useAsyncDebounce((value) => {\r\n    setGlobalFilter(value || undefined);\r\n  }, 200);\r\n\r\n  return (\r\n    <span>\r\n      Search:{\" \"}\r\n      <input\r\n        className=\"form-control\"\r\n        value={value || \"\"}\r\n        onChange={(e) => {\r\n          setValue(e.target.value);\r\n          onChange(e.target.value);\r\n        }}\r\n        placeholder={`${count} records...`}\r\n      />\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length;\r\n\r\n  return (\r\n    <input\r\n      className=\"form-control\"\r\n      value={filterValue || \"\"}\r\n      onChange={(e) => {\r\n        setFilter(e.target.value || undefined);\r\n      }}\r\n      placeholder={`Search ${count} records...`}\r\n    />\r\n  );\r\n}\r\n\r\nfunction Table({ columns, data, onColumnClick }) {\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n    }),\r\n    []\r\n  );\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    page,\r\n    state,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n\r\n    state: { pageIndex, pageSize },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 2, pageSize: 5 },\r\n      defaultColumn,\r\n    },\r\n    useFilters,\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  const handleColumnClick = (e) => {\r\n    if (typeof onColumnClick === \"function\") {\r\n      const value = e.target.getAttribute(\"data_id\");\r\n      onColumnClick(value);\r\n    }\r\n  };\r\n\r\n  const handleNonColumnClick = (e) => {\r\n    e.stopImmediatePropagation?.();\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    return;\r\n  };\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <div>\r\n      {/* <GlobalFilter\r\n                preGlobalFilteredRows={preGlobalFilteredRows}\r\n                globalFilter={state.globalFilter}\r\n                setGlobalFilter={setGlobalFilter}\r\n            /> */}\r\n      <table className=\"table\" {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => {\r\n                const { onClick, otherProps } = column.getHeaderProps(\r\n                  column.getSortByToggleProps()\r\n                );\r\n                const handleClick = (e) => {\r\n                  handleColumnClick(e);\r\n                  onClick(e);\r\n                };\r\n                return (\r\n                  <th\r\n                    data_id={column.render(\"Header\")}\r\n                    {...column.getHeaderProps()}\r\n                    {...otherProps}\r\n                    onClick={handleClick}\r\n                  >\r\n                    {column.render(\"Header\")}\r\n                    {/* Render the columns filter UI */}\r\n                    <div onClick={handleNonColumnClick}>\r\n                      {column.canFilter ? column.render(\"Filter\") : null}\r\n                    </div>\r\n                    {/* Add a sort direction indicator */}\r\n                    <span onClick={handleNonColumnClick}>\r\n                      {column.isSorted ? (column.isSortedDesc ? \" \" : \" \") : \"\"}\r\n                    </span>\r\n                  </th>\r\n                );\r\n              })}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      {/* \r\n        Pagination can be built however you'd like. \r\n        This is just a very basic UI implementation:\r\n      */}\r\n\r\n      <br></br>\r\n\r\n      <nav aria-label=\"Page navigation example\">\r\n        <ul className=\"pagination justify-content-center\">\r\n          <li\r\n            className=\"page-item\"\r\n            onClick={() => gotoPage(0)}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            <a className=\"page-link\">First</a>\r\n          </li>\r\n          <li\r\n            className=\"page-item\"\r\n            onClick={() => previousPage()}\r\n            disabled={!canPreviousPage}\r\n          >\r\n            <a className=\"page-link\">{\"<\"}</a>\r\n          </li>\r\n          <li\r\n            className=\"page-item\"\r\n            onClick={() => nextPage()}\r\n            disabled={!canNextPage}\r\n          >\r\n            <a className=\"page-link\">{\">\"}</a>\r\n          </li>\r\n          <li\r\n            className=\"page-item\"\r\n            onClick={() => gotoPage(pageCount - 1)}\r\n            disabled={!canNextPage}\r\n          >\r\n            <a className=\"page-link\">Last</a>\r\n          </li>\r\n          <li>\r\n            <a className=\"page-link\">\r\n              Page{\" \"}\r\n              <strong>\r\n                {pageIndex + 1} of {pageOptions.length}\r\n              </strong>{\" \"}\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a className=\"page-link\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"number\"\r\n                defaultValue={pageIndex + 1}\r\n                onChange={(e) => {\r\n                  const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n                  gotoPage(page);\r\n                }}\r\n                style={{ width: \"100px\", height: \"20px\" }}\r\n              />\r\n            </a>\r\n          </li>{\" \"}\r\n          <select\r\n            className=\"form-control\"\r\n            value={pageSize}\r\n            onChange={(e) => {\r\n              setPageSize(Number(e.target.value));\r\n            }}\r\n            style={{ width: \"120px\", height: \"38px\" }}\r\n          >\r\n            {[5, 10, 20, 30, 40, 50].map((pageSize) => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PaginationTableComponent(props) {\r\n  const columns = React.useMemo(() => []);\r\n\r\n  const sample = props.data;\r\n  const headerdata = [];\r\n\r\n  Object.keys(sample[0])\r\n    .slice(0, 74)\r\n    .map((val, k) => {\r\n      headerdata.push({\r\n        Header: \"a\",\r\n        columns: [\r\n          {\r\n            Header: val,\r\n            accessor: val,\r\n          },\r\n        ],\r\n      });\r\n    });\r\n\r\n  return (\r\n    <Table\r\n      columns={headerdata}\r\n      data={sample}\r\n      onColumnClick={props.onColumnClick}\r\n    />\r\n  );\r\n}\r\n\r\nexport default PaginationTableComponent;\r\n","C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\api\\crawler.js",[],"C:\\Users\\Azadeh\\Desktop\\admin-dashboard\\src\\api\\BaseApi.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":1,"column":8,"nodeType":"102","messageId":"103","endLine":1,"endColumn":12},{"ruleId":"100","severity":1,"message":"104","line":22,"column":8,"nodeType":"102","messageId":"103","endLine":22,"endColumn":22},{"ruleId":"100","severity":1,"message":"105","line":25,"column":10,"nodeType":"102","messageId":"103","endLine":25,"endColumn":23},{"ruleId":"100","severity":1,"message":"106","line":1,"column":27,"nodeType":"102","messageId":"103","endLine":1,"endColumn":36},{"ruleId":"100","severity":1,"message":"107","line":7,"column":8,"nodeType":"102","messageId":"103","endLine":7,"endColumn":17},{"ruleId":"96","replacedBy":"108"},{"ruleId":"98","replacedBy":"109"},{"ruleId":"100","severity":1,"message":"110","line":2,"column":17,"nodeType":"102","messageId":"103","endLine":2,"endColumn":26},{"ruleId":"100","severity":1,"message":"111","line":3,"column":8,"nodeType":"102","messageId":"103","endLine":3,"endColumn":18},{"ruleId":"100","severity":1,"message":"112","line":16,"column":10,"nodeType":"102","messageId":"103","endLine":16,"endColumn":22},{"ruleId":"100","severity":1,"message":"113","line":73,"column":5,"nodeType":"102","messageId":"103","endLine":73,"endColumn":9},{"ruleId":"100","severity":1,"message":"114","line":76,"column":5,"nodeType":"102","messageId":"103","endLine":76,"endColumn":10},{"ruleId":"100","severity":1,"message":"115","line":85,"column":5,"nodeType":"102","messageId":"103","endLine":85,"endColumn":26},{"ruleId":"100","severity":1,"message":"116","line":86,"column":5,"nodeType":"102","messageId":"103","endLine":86,"endColumn":20},{"ruleId":"117","severity":1,"message":"118","line":188,"column":13,"nodeType":"119","endLine":188,"endColumn":38},{"ruleId":"117","severity":1,"message":"118","line":195,"column":13,"nodeType":"119","endLine":195,"endColumn":38},{"ruleId":"117","severity":1,"message":"118","line":202,"column":13,"nodeType":"119","endLine":202,"endColumn":38},{"ruleId":"117","severity":1,"message":"118","line":209,"column":13,"nodeType":"119","endLine":209,"endColumn":38},{"ruleId":"117","severity":1,"message":"118","line":212,"column":13,"nodeType":"119","endLine":212,"endColumn":38},{"ruleId":"117","severity":1,"message":"118","line":220,"column":13,"nodeType":"119","endLine":220,"endColumn":38},{"ruleId":"100","severity":1,"message":"120","line":254,"column":9,"nodeType":"102","messageId":"103","endLine":254,"endColumn":16},{"ruleId":"121","severity":1,"message":"122","line":254,"column":19,"nodeType":"123","endLine":254,"endColumn":32},{"ruleId":"124","severity":1,"message":"125","line":261,"column":19,"nodeType":"126","messageId":"127","endLine":261,"endColumn":21},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'FilterListIcon' is defined but never used.","'BrowserRouter' is defined but never used.","'useEffect' is defined but never used.","'LineChart' is defined but never used.",["128"],["129"],"'Component' is defined but never used.","'ReactTable' is defined but never used.","'GlobalFilter' is defined but never used.","'rows' is assigned a value but never used.","'state' is assigned a value but never used.","'preGlobalFilteredRows' is assigned a value but never used.","'setGlobalFilter' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'columns' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]